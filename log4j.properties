# Set root logger level to INFO and its only appender to Console.
log4j.rootLogger=INFO, Console

# A1 is set to be a ConsoleAppender.
log4j.appender.Console=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %p %c{1}: %m%n


# Set FlashML log level to INFO and append to Remote Server
log4j.logger.com.tfs.flashml=INF0, clientnodeLogServer
#We will use FlashML Socket Appender
log4j.appender.clientnodeLogServer=org.apache.log4j.net.FlashMLSocketAppender
#Host name or IP address of socket server
log4j.appender.clientnodeLogServer.RemoteHost=localhost
#Port where socket server will be listening for the log events
log4j.appender.clientnodeLogServer.Port=4712
#Define any connection delay before attempting to reconnect
log4j.appender.clientnodeLogServer.ReconnectionDelay=10000

#keeping breeze package log level at WARN as there was a lot of unwanted INFO logs
log4j.logger.breeze=WARN

# Set Application Master log level to ERROR and append to Remote Server
log4j.logger.org.apache.spark.deploy.yarn.ApplicationMaster=ERROR, ErrorLogger
#We will use FlashML Socket Appender
log4j.appender.ErrorLogger=org.apache.log4j.net.FlashMLSocketAppender
#Host name or IP address of socket server
log4j.appender.ErrorLogger.RemoteHost=localhost
#Port where socket server will be listening for the log events
log4j.appender.ErrorLogger.Port=4712
#Define any connection delay before attempting to reconnect
log4j.appender.ErrorLogger.ReconnectionDelay=10000